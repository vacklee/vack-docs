import{_ as e,r as t,o as p,c as o,a as s,b as n,d as c,e as i}from"./app-ab2049dd.js";const l={},u=s("h1",{id:"状态共享",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#状态共享","aria-hidden":"true"},"#"),n(" 状态共享")],-1),r={href:"https://pinia.web3doc.top/",target:"_blank",rel:"noopener noreferrer"},d=i(`<h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h2><p>Vack 基于 Pinia 封装了一个 <code>StoreBase</code> 基类，创建一个状态共享模块时需要继承该类。</p><ul><li>StoreBase 基类定义在 <code>src/store/base.js</code></li><li>状态共享模块定义在 <code>src/store/*.js</code></li></ul><p>以定义一个 User 共享状态举例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// src/store/user.js</span>
<span class="token keyword">import</span> StoreBase <span class="token keyword">from</span> <span class="token string">&#39;./base&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">StoreBase</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token comment">// 定义 state</span>
  <span class="token literal-property property">cnName</span><span class="token operator">:</span> <span class="token string">&#39;中文名&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">enName</span><span class="token operator">:</span> <span class="token string">&#39;en_name&#39;</span><span class="token punctuation">,</span>
  
  <span class="token comment">// 定义 getter / setter</span>
  <span class="token keyword">get</span> <span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>enName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>cnName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">set</span> <span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 定义函数</span>
  <span class="token function">updateName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 引入</span>
<span class="token keyword">import</span> user <span class="token keyword">from</span> <span class="token string">&#39;@/store/user&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 访问 state</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>cnName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 访问 getter</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>fullName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 调用函数</span>
user<span class="token punctuation">.</span><span class="token function">updateName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// state赋值</span>
user<span class="token punctuation">.</span>cnName <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// setter赋值</span>
user<span class="token punctuation">.</span>fullName <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function k(m,v){const a=t("ExternalLinkIcon");return p(),o("div",null,[u,s("p",null,[n("Vack 的状态共享基于 "),s("a",r,[n("Pinia"),c(a)]),n(" 实现。为了方便使用，在此基础上做了进一步的封装。")]),d])}const h=e(l,[["render",k],["__file","store.html.vue"]]);export{h as default};
