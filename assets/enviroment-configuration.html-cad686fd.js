import{_ as e,o as t,c as a,e as n}from"./app-ab2049dd.js";const s={},l=n(`<h1 id="环境配置" tabindex="-1"><a class="header-anchor" href="#环境配置" aria-hidden="true">#</a> 环境配置</h1><p>Vack 支持多环境，可以使用 .env.* 文件配置环境变量，默认支持 dev、test、prod 三种环境。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>├─ .env.dev
├─ .env.test
├─ .env.prod
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量" aria-hidden="true">#</a> 环境变量</h2><p>开发者可以根据项目需要定义环境变量。 Vack 默认使用了以下环境变量：</p><table><thead><tr><th style="text-align:left;">环境变量</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">NODE_ENV</td><td style="text-align:left;">编译模式</td></tr><tr><td style="text-align:left;">VITE_BASE</td><td style="text-align:left;">站点的基础路径</td></tr><tr><td style="text-align:left;">VITE_API_BASEURL</td><td style="text-align:left;">接口的基础路径</td></tr><tr><td style="text-align:left;">VITE_API_MOCK</td><td style="text-align:left;">是否启用接口模拟</td></tr><tr><td style="text-align:left;">VITE_LOCALE_DEFAULT</td><td style="text-align:left;">国际化默认语言</td></tr></tbody></table><ul><li><code>VITE_BASE</code> 默认为 <code>/</code>，即部署在一级路由；如果需要部署在二级路由，则需修改为 <code>/xxx</code>；</li><li><code>VITE_API_BASEURL</code> 也作为 axios 实例的 <code>BASE_URL</code> 参数。</li></ul><h2 id="新增环境" tabindex="-1"><a class="header-anchor" href="#新增环境" aria-hidden="true">#</a> 新增环境</h2><p>Vack 默认支持 dev、test、prod 三种环境，开发者可以根据项目需要新增环境。 新增一个环境只需要创建环境变量文件，再添加相应的调试/构建命令即可。</p><p><strong>以新增一个 <code>local</code> 环境举例：</strong></p><ol><li>复制 <code>.env.dev</code> 命名为 <code>.env.local</code>：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cp</span> .env.dev .env.local
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>在 <code>package.json</code> 添加<code>调试命令(dev:local)</code>和<code>构建命令(build:local)</code>：</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev:local&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite --mode local&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build:local&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite build --mode local&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),d=[l];function o(i,c){return t(),a("div",null,d)}const p=e(s,[["render",o],["__file","enviroment-configuration.html.vue"]]);export{p as default};
